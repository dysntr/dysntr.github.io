"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"creating-a-docusaurus-blog","metadata":{"permalink":"/blog/creating-a-docusaurus-blog","editUrl":"https://github.com/dysntr/dysntr.github.io/blog/06-27-2022-creating-a-docusaurus-blog/index.md","source":"@site/blog/06-27-2022-creating-a-docusaurus-blog/index.md","title":"Creating a Docusaurus Blog","description":"Introduction","date":"2022-06-27T18:45:24.000Z","formattedDate":"June 27, 2022","tags":[{"label":"website","permalink":"/blog/tags/website"},{"label":"blog","permalink":"/blog/tags/blog"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":5.14,"truncated":false,"authors":[{"name":"Dysan","title":"Explorer and Builder","url":"https://github.com/dysntr","imageURL":"https://github.com/dysntr.png","key":"Dysan"}],"frontMatter":{"slug":"creating-a-docusaurus-blog","title":"Creating a Docusaurus Blog","authors":"Dysan","tags":["website","blog","docusaurus"]}},"content":"## Introduction\\n\\nThere are many different blog platforms out there. The objective was to pick a blogging platform that was to meet the following requirements:\\n\\n* Popular (so that there are plenty of documentations on it)\\n* Low overhead (Quick to setup and maintain)\\n* Allow for articles to be written in Markdown\\n* Have menu and toolbar for organization\\n* Have static-site generator feature (Web3/IPFS Deployment optionality)\\n* Easy to Blog and showcase portfolio projects\\n* Clean layout\\n\\nThis article details the step for setting up a [Docusaurus](https://docusaurus.io/docs/category/getting-started) website with blog and showcase portfolio pages.\\n\\n## Walkthrough\\n\\n### Step 1 - Verify Requirements {#requirements}\\n\\nNodeJS 16.14 or above is required (`node -v` can be used to check version) to setup Docusaurus. **Node.js** can be downloaded here: [Node.js](https://nodejs.org/en/download/)\\n\\n### Step 2 - Install Docusaurus {#install}\\n\\nThe following command will install the `classic` theme docusaurus website. Replace `my-website` with the name of the website project (eg. dysntr.github.io). \\n\\n```bash\\nnpx create-docusaurus@latest my-website classic\\n```\\nFor more details refer to this [link](https://docusaurus.io/docs/installation).\\n\\n### Step 3 - Running the Development Server {#run-server}\\n\\nThe following command starts a local webserver that serves the docusaurus website.\\n\\n```bash\\ncd my-website\\nnpm start\\n```\\nThe website can be accessed at [http://localhost:3000](http://localhost:3000).\\n\\n### Step 4 - Setup the Config {#config}\\n\\nThe website config needs to be added to `docusaurus.config.js` file. For full details refer to this [link](https://docusaurus.io/docs/configuration).\\n\\nHere are some of the information you need to setup the config:\\n\\n:::note\\n**title**: Website title (eg. `Dysan\\\\\'s Site`)\\n\\n**tagline**: Website tagline (eg. `A place to document discoveries and projects`)\\n\\n**url**: `https://dysntr.github.io/`\\n\\n**favicon**: Link for the favicon (eg. `img/favicon.ico`)\\n\\n**projectName**: Usually your repo name (eg. `dysntr.github.io`)\\n\\n**organizationName**: Usually your GitHub org/user name (eg. `dysntr`).\\n\\n**deploymentBranch**: The branch to generate the static pages to (eg. `deploymentBranch: \'gh-pages\',`)\\n\\n**presets docs/blog editUrl**: Link to the github repo (eg. `https://github.com/dysntr/dysntr.github.io`)\\n\\n**themeConfig:navbar**: navigation bar config ( eg. `title: \'Home\'`, `href: \'https://github.com/dysntr/dysntr.github.io\'`)\\n\\n**themeConfig:footer**: footer config (eg. twitter settings `href: \'https://twitter.com/dysntr\'`, github settings `href: \'https://github.com/dysntr/dysntr.github.io\'` )\\n\\n**themeConfig:copyright**: copyright config (eg. `Copyright \xa9 ${new Date().getFullYear()} Dysan Inc. Built with Docusaurus.`)\\n\\n:::\\n\\nFull config for this site can be found [here](https://github.com/dysntr/dysntr.github.io/docusaurus.config.js).\\n\\n\\n### Step 5 - Cleaning Up the Default Website\\n\\nSome of the default pages and articles need to be cleaned up to finish the website.\\n\\nHere are some of the things this section covers:\\n\\n* Rename the Tutorial section to \\"Documentation\\"\\n* Move all the default tutorials to \\"Docusaurus Website Tutorials\\" Menu\\n* Remove the default authors, and add yourself to authors\\n* Remove the default blog articles, and this article as a blog article \\n* Clean up the Home page\\n\\n#### Rename the Tutorial section to \\"Documentation\\"\\n\\nUpdate `docusaurus.config.js` file to modify the top menu bar.\\nThere are two places in `docusaurus.config.js` that `Tutorial` needs to be changed to `Documentations`.\\n\\n1. Under `themeConfig:navbar:items:label:` change `Tutorial` to `Documentations`\\n2. Under `themeConfig:footer:links:items:label:` change `Tutorial` to `Documentations`\\n\\n#### Move all the default tutorials to \\"Docusaurus Website Tutorials\\" Menu\\n\\nChange the file and folder structures to modify the left toolbar.\\n\\n1. Create a new folder `\\\\Website\\\\docs\\\\docusaurus-website-tutorials` where \\"Website\\" is your project name.\\n2. Copy _category_.json file from `tutorial-basics` to the new folder, and update label and description to `\\"Docusaurus Website Tutorials\\"`, and position to 2.\\n3. Move `\\\\docs\\\\tutorial-basics`, `\\\\docs\\\\tutorial-extras` and `intro.md` to this new folder.\\n4. Create a `intro.md` in `docs` folder with following content:\\n\\n```\\n---\\nsidebar_position: 1\\n---\\n# Introduction\\n```\\n\\nThe left toolbar of the website will look something like this:\\n\\n![](.\\\\img\\\\image01.png)\\n\\n#### Remove the default authors, and add yourself to authors\\nThe author file allows blog artciles to reference a specific author in the article. The file includes things like name, title, url, image_url. \\n\\nTo add yourself, edit the `.\\\\blog\\\\authors.yml` file. Change one of the authors to yourself and delete the others. The thing to note is that, your github profile picture can be accessed via the link `https://github.com/<username>.png` (eg. `https://github.com/dysntr.png`). \\n\\n#### Remove the default blog articles, and this article as a blog article \\n\\nTo create a blog article, create a new folder under `\\\\blog` folder. Follow the naming convention `date-articlesubject` eg.`06-27-2022-creating-a-docusaurus-blog`.\\n\\nEvery blog article has a Markdown file. At the top of the file, a file descriptor header needs to be included. Here is an example\\n\\n```\\n---\\nslug: creating-a-docusaurus-blog\\ntitle: Creating a Docusaurus Blog\\nauthors: Dysan\\ntags: [website, blog, docusaurus]\\n---\\n```\\n\\nPlace the above header in `index.md` file under `\\\\blog\\\\06-27-2022-creating-a-docusaurus-blog` folder.\\n\\nDelete all the other blog files and folders under `\\\\blog` folder.\\n\\nAdd whatever you like to `index.md` as this will be the first blog article for the website.\\n\\n#### Cleanup the Home page\\n\\nThe Home page is the first that shows up when a user visits the website URL. This page is located at `./Website/src/pages/index.js`\\n\\nChange the button name from `Docusaurus Tutorial - 5 min` to `Check out the Blog!`.\\n\\nChange the button link to take users to the blog page, i.e. `to=\\"/blog/\\">`.\\n\\nRemove `<HomepageFeatures />` from the page, this can be added later once additional customization have been completed.\\n\\n### Step 6 - Deploy to GitHub Pages\\n\\nThis step will provide the steps to deploy the website to Github pages.\\n\\n:::note\\nEach GitHub repository is associated with a GitHub Pages service. If the deployment repository is called my-org/my-project (where my-org is the organization name or username), the deployed site will appear at https://my-org.github.io/my-project/. Specially, if the deployment repository is called my-org/my-org.github.io (the organization GitHub Pages repo), the site will appear at https://my-org.github.io/. [Source](https://docusaurus.io/docs/deployment)\\n:::\\n\\nFirst, create the github repository `dysntr.github.io`, where `dysntr` is the user/org name. Commit and push your first commit using the following commands:\\n\\n``` bash\\ngit init\\ngit add *\\ngit commit -m \\"first commit\\" \\ngit branch -M main\\ngit remote add origin https://github.com/dysntr/dysntr.github.io.git\\ngit push -u origin main\\n```\\n\\nTo deploy the website run `GIT_USER=<GITHUB_USERNAME> yarn deploy` eg. `GIT_USER=dysntr yarn deploy`\\n\\nFor more details on deployment refer to [link](https://docusaurus.io/docs/deployment).\\n\\n## Conclusions\\n\\nThis article provided the steps required to setup and deploy a basic blog website to Github pages. \\n\\n## Future Things to Do\\n\\nFuture work to be considered for this project are:\\n* Additional blog customizations and personalization (colors, background images, fonts, etc.).\\n* Adding project portfolio showcase.\\n* Deploying the website to IPFS and setting up ENS."}]}')}}]);